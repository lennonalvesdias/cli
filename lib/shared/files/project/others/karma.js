#!/usr/bin/env node
"use strict";
module.exports = function () {
    return "module.exports = function (config) {\n    config.set(\n    {        \n        browsers: ['PhantomJS'],\n        client: {\n            runInParent : true,\n            clearContext : true\n        },\n        customContextFile : 'specRunner.html',        \n        files: ['tests.webpack.js', 'e2e/**/*.spec.js'],\n        exclude: [],       \n        frameworks: [\n            'jasmine-ajax',\n            'jasmine'\n        ],\n        autoWatch: false,\n        singleRun : true,\n        restartOnFileChange : false,\n        plugins : [\n            'karma-jasmine-ajax', \n            'karma-webpack', \n            'karma-jasmine',\n            'karma-sourcemap-loader',\n            'karma-coverage-istanbul-reporter',\n            'karma-chrome-launcher',\n            'karma-phantomjs-launcher'\n        ],\n        preprocessors: {\n            'tests.webpack.js': ['webpack', 'sourcemap'],\n        },              \n        webpack: {\n            cache: true,\n            devtool: 'inline-source-map',\n            mode : 'production',\n            entry : {\n                'main': './src/main.js'\n            },\n            module: {\n                \n                rules : [                        \n                    {\n                        test: /\\.js$/,\n                        exclude: /(node_modules)/,\n                        loader: 'babel-loader',\n                        options: {\n                            presets: [\n                                [\n                                    '@babel/preset-env',\n                                    {\n                                        targets: {\n                                            browsers: ['last 2 versions', 'ie >= 11']\n                                        },\n                                        corejs : '2.0.0',\n                                        modules: false,\n                                        useBuiltIns: 'entry'\n                                    }\n                                ]\n                            ]\n                        }\n                    },\n                    {\n                        test: /\\.(s*)css$/,\n                        use: [\n                            \"style-loader\", // creates style nodes from JS strings\n                            \"css-loader\", // translates CSS into CommonJS\n                            \"sass-loader\" // compiles Sass to CSS\n                        ]\n                    },\n                    {\n                        test: /\\.(woff(2)?|ttf|eot|svg)(\\?v=\\d+\\.\\d+\\.\\d+)?$/,\n                        use: [{\n                            loader: 'file-loader',\n                            options: {\n                                name: '[name].[ext]',\n                                outputPath: 'assets/fontello/font/'\n                            }\n                        }]\n                    },\n                    {\n                        test: /\\.(png|jpg)$/,\n                        use : [{\n                            loader : 'file-loader',\n                            options: {\n                                name : '[name].[ext]',\n                                outputPath: 'assets/img',\n                                emitFile : true\n                            }\n                        }]\n                    },\n                    {\n                        test: /\\.js$|\\.jsx$/,\n                        use: {\n                            loader: 'istanbul-instrumenter-loader',\n                            options: { \n                                esModules: true,\n                                produceSourceMap : true\n                            }\n                        },\n                        enforce: 'post',\n                        exclude: /node_modules|\\.spec\\.js$/,\n\n                    }                                                              \n                ]                \n            },\n        },    \n        colors : true,    \n        reporters: ['progress', 'coverage-istanbul'],\n        coverageIstanbulReporter : {\n            reports : ['html','lcovonly','text-summary'],\n            fixWebpackSourcePaths : true\n        }\n    });    \n    \n};";
};
