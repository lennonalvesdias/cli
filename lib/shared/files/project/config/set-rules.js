#!/usr/bin/env node
"use strict";
module.exports = function () {
    return "const MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = () => {\n    return {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /(node_modules)/,\n                loader: 'babel-loader',\n                options: {\n                    presets: [\n                        [\n                            '@babel/preset-env',\n                            {\n                                targets: {\n                                    browsers: ['last 2 versions', 'ie >= 11']\n                                },\n                                corejs : '2.0.0',\n                                modules: false,\n                                useBuiltIns: 'usage'\n                            }\n                        ]\n                    ]\n                }\n            },\n            {\n                test: /\\.(woff(2)?|ttf|eot|svg)(\\?v=\\d+\\.\\d+\\.\\d+)?$/,\n                use: [{\n                    loader: 'file-loader',\n                    options: {\n                        name: '[name].[ext]',\n                        outputPath: 'assets/font',\n                        emitFile: true\n                    }\n                }]\n            },\n            {\n                test: /\\.(s*)css$/,\n                use: [\n                    {\n                        loader: MiniCssExtractPlugin.loader,\n                        options : {\n                            publicPath: '/',\n                            hmr: process.env.NODE_ENV === 'development'\t\t\t\t\t\t\t\n                        }\n                    },\n                    \"css-loader\", // translates CSS into CommonJS\n                    \"sass-loader\", // compiles Sass to CSS\n                    'resolve-url-loader'\n                ]\n            },\n            {\n                test: /\\.(png|jpg|ico)$/,\n                use: [{\n                    loader: 'file-loader',\n                    options: {\n                        name: '[name].[ext]',\t\t\t\t\t\t\t\n                        outputPath: 'assets/img',\n                        publicPath: '../img',\n                        emitFile: true\t\t\t\t\t\t\t\n                    }\n                }]\n            }\t\t\t\t\n        ]\n    }\n}";
};
