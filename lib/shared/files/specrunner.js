#!/usr/bin/env node
"use strict";
module.exports = function () {
    return "<!DOCTYPE html>\n<!--\nThis is the execution context.\nLoaded within the iframe.\nReloaded before every execution run.\n-->\n<html>\n<head>\n    <title></title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" />\n</head>\n<body>\n    <div id=\"app\"></div>\n    <input id=\"cpfCnpj\" />\n    <!-- The scripts need to be in the body DOM element, as some test running frameworks need the body\n        to have already been created so they can insert their magic into it. For example, if loaded\n        before body, Angular Scenario test framework fails to find the body and crashes and burns in\n        an epic manner. -->\n    <script src=\"context.js\"></script>\n    <script type=\"text/javascript\">\n    // Configure our Karma and set up bindings\n    %CLIENT_CONFIG%\n    window.__karma__.setupContext(window);\n\n    // All served files with the latest timestamps\n    %MAPPINGS%\n    </script>\n    <!-- Dynamically replaced with <script> tags -->\n    %SCRIPTS%\n    <!-- Since %SCRIPTS% might include modules, the 'loaded()' call needs to be in a module too.\n    This ensures all the tests will have been declared before karma tries to run them. -->\n    <script type=\"module\">\n    window.__karma__.loaded();\n    </script>\n    <script nomodule>\n    window.__karma__.loaded();\n    </script>\n</body>\n</html>";
};
